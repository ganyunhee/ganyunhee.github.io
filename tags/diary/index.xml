<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>diary on CODENAME | EUNS</title>
    <link>http://ganyunhee.github.io/tags/diary/</link>
    <description>Recent content in diary on CODENAME | EUNS</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 28 Jul 2023 00:00:00 +0000</lastBuildDate><atom:link href="http://ganyunhee.github.io/tags/diary/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>[AI웹개발 취업캠프/정보통신산업진흥원(NIPA)] Day 10</title>
      <link>http://ganyunhee.github.io/posts/aiweb_day10/</link>
      <pubDate>Fri, 28 Jul 2023 00:00:00 +0000</pubDate>
      
      <guid>http://ganyunhee.github.io/posts/aiweb_day10/</guid>
      <description>JavaScript : Web API, document 과제 webAPI의 dialog box인 alert(), confirm() 메소드는 window나 document 없이 바로 사용할 수 있는 이유 찾아보기 alert(), confirm()
브라우저의 window 객체에서 built-in 즉, 기본적으로 제공하는 또는 속해 있는 JavaScript 메소드이기 때문에 document 없이 바로 사용할 수 있는 함수들이다 alert(message) confirm(message) JavaScript에서 브라우저 환경에서 실행되는 코드는 기본적으로 전역 컨텍스트에서 동작한다. 이 컨텍스트에서는 window 객체가 전역 객체로서 사용된다. 따라서 브라우저 환경에서 실행되는 JavaScript 코드에서는 window 객체의 메소드나 속성을 바로 사용할 수 있다.</description>
    </item>
    
    <item>
      <title>[AI웹개발 취업캠프/정보통신산업진흥원(NIPA)] Day 9</title>
      <link>http://ganyunhee.github.io/posts/aiweb_day9/</link>
      <pubDate>Thu, 27 Jul 2023 00:00:00 +0000</pubDate>
      
      <guid>http://ganyunhee.github.io/posts/aiweb_day9/</guid>
      <description>JavaScript : DOM Element, Web API 과제 주제 1. DOM element 분석 HTML 문서 앞에 &amp;lt;script&amp;gt; 태그 내에 js코드를 작성했고, 문서가 로드 되기 전에 script의 element를 가져오지 못한 상태에서 console.log로 디버그하여 개발자도구에 확인해보았을때는 왜 element를 가져와졌는지 이유에 대해서 알아보기.
참고 코드는 아래에 첨부합니다.
&amp;lt;!DOCTYPE html&amp;gt; &amp;lt;html lang=“ko”&amp;gt; &amp;lt;head&amp;gt; &amp;lt;meta charset=“UTF-8&amp;#34;&amp;gt; &amp;lt;title&amp;gt;JavaScript DOM Element&amp;lt;/title&amp;gt; &amp;lt;script&amp;gt; //HTML 태그 이름을 이용한 선택 console.log(‘aaa’) var selectedItem = document.getElementsByTagName(“li”); // 모든 &amp;lt;li&amp;gt; 요소를 선택함. console.log(selectedItem) console.</description>
    </item>
    
    <item>
      <title>[AI웹개발 취업캠프/정보통신산업진흥원(NIPA)] Day 8</title>
      <link>http://ganyunhee.github.io/posts/aiweb_day8/</link>
      <pubDate>Wed, 26 Jul 2023 00:00:00 +0000</pubDate>
      
      <guid>http://ganyunhee.github.io/posts/aiweb_day8/</guid>
      <description>과제 &amp;gt; this keyword Original Code var person = { name: &amp;#34;홍길동&amp;#34;, birthday: &amp;#34;030219&amp;#34;, age: 30, pId: &amp;#34;1234567&amp;#34;, fullId: function() { return this.birthday + this.pId; } }; person.fullId() // 0302191234567 person.fullId; // function () { return this.birthday + this.pId; } //생성자(constructor)를 이용한 객체 생성 var day = new Date(); // new 연산자를 사용하여 Date 타입의 객체를 생성함. console.log(&amp;#34;올해는 &amp;#34; + day.getFullYear() + &amp;#34;년입니다.&amp;#34;); Edited Code var person = { name: &amp;#34;홍길동&amp;#34;, birthday: &amp;#34;030219&amp;#34;, age: 30, pId: &amp;#34;1234567&amp;#34;, fullId: function() { return birthday + pId; } }; 위 코드에 따라 person 객체 안에 있는 fullID 함수를 아래처럼 호출하면 ReferenceError가 발생된다.</description>
    </item>
    
    <item>
      <title>[AI웹개발 취업캠프/정보통신산업진흥원(NIPA)] Day 6&amp;7</title>
      <link>http://ganyunhee.github.io/posts/aiweb_day6_7/</link>
      <pubDate>Tue, 25 Jul 2023 00:00:00 +0000</pubDate>
      
      <guid>http://ganyunhee.github.io/posts/aiweb_day6_7/</guid>
      <description>주제. JavaScript 또는 TypeScript 학습, Node.js 실습 I. 오목게임 1. Nodejs와 함께 콘솔창에서 실행되도록 사용자 입출력 도구를 사용한다. 2. 오목판 사이즈는 30x30으로 고정한 후 정사각형의 형태의 오목판을 만든다. 3. 사용자 입력 도구에 좌표값 (15,15)라고 입력하여 바둑돌을 둔다. 4. 흑은 1로, 백은 0으로 표기하여 화면에 흑과 백이 번갈아가면서 두도록 입력 도구가 계속 뜨도록 입력 받는다. 5. 오목 규칙에 따라 5줄이 먼저 완성되면 “Game over”와 같이 누가 이겼는지 승패를 알리는 출력을 만든다. 6.</description>
    </item>
    
    <item>
      <title>[AI웹개발 취업캠프/정보통신산업진흥원(NIPA)] Day 5</title>
      <link>http://ganyunhee.github.io/posts/aiweb_day5/</link>
      <pubDate>Sat, 22 Jul 2023 00:00:00 +0000</pubDate>
      
      <guid>http://ganyunhee.github.io/posts/aiweb_day5/</guid>
      <description>TODO 취업 특강 수강 Main Page Redesign Main Page Redesign Blog page - blog.html Change some font, rearrange some spacing and text I made some text bigger and improved some marginal spacing to fill up whitespace and perhaps make the page more aesthetically pleasing to view.
Add referral links to blog post items Referral links were added to each item under the blog post list for future use.
&amp;lt;ul class=&amp;#34;blog_posts&amp;#34;&amp;gt; &amp;lt;li&amp;gt;&amp;lt;a href=&amp;#34;&amp;#34;&amp;gt;Sample Blog Post #1&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt; &amp;lt;li&amp;gt;&amp;lt;a href=&amp;#34;&amp;#34;&amp;gt;Sample Blog Post #2&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt; &amp;lt;li&amp;gt;&amp;lt;a href=&amp;#34;&amp;#34;&amp;gt;Sample Blog Post #3&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt; &amp;lt;/ul&amp;gt; CSS styling involved removing default text decoration settings from &amp;lt;a&amp;gt; tag referral links (color is set to white for default and visited links).</description>
    </item>
    
    <item>
      <title>[AI웹개발 취업캠프/정보통신산업진흥원(NIPA)] Day 3&amp;4</title>
      <link>http://ganyunhee.github.io/posts/aiweb_day3_4/</link>
      <pubDate>Fri, 21 Jul 2023 00:00:00 +0000</pubDate>
      
      <guid>http://ganyunhee.github.io/posts/aiweb_day3_4/</guid>
      <description>학습내용 정리 Day 3 색깔의 표현 RGB (r, g, b) red, green, blue 값으로 색깔을 표현할 수 있다 RGBA (r, g, b, a) red, green, blue, alpha alpha는 opacity(투명도)를 표현한다 HEX (#FFFFFF) hexadecimal(16진수)로 표기한다
0~9 -&amp;gt; A~F 범위 &amp;ndash; 0(Black), F(White)
0에 가까울수록 해당 색깔이 어두워짐, F에 가까울 수록 해당 색깔이 밝아짐
예) HEX to RGB 표현 #FF0000 &amp;ndash;&amp;gt; rgb(255, 0, 0) #00FF00 &amp;ndash;&amp;gt; rgb(0, 255, 0) #0000FF &amp;ndash;&amp;gt; rgb(0, 0, 255)</description>
    </item>
    
    <item>
      <title>[AI웹개발 취업캠프/정보통신산업진흥원(NIPA)] Day 2</title>
      <link>http://ganyunhee.github.io/posts/aiweb_day2/</link>
      <pubDate>Wed, 19 Jul 2023 00:00:00 +0000</pubDate>
      
      <guid>http://ganyunhee.github.io/posts/aiweb_day2/</guid>
      <description>자기소개 피드백 + Daily 인사이트 &amp;ldquo;IT 기술의 한계&amp;rdquo; IT : 알면 알고, 모르면 모름. 다 될 것 같지만 못하는 것도 있다. (한계가 있음) 어떤 것을 만들 수 있는지, 못 만드는지 스스로 알고 판단해야 한다.
&amp;ldquo;지금은 많이 요구하는 시대&amp;rdquo; 요즘 역량을 보고 뽑는 회사가 많아졌다. 남들과 다른 차별점을 가지고 있어야 한다.
&amp;ldquo;모르면 모르고, 알면 왜 이걸 알아야 돼 (어떻게 알고 있고 어떻게 적용하지?)&amp;rdquo; 자기계발 및 기초다지기에는 지식을 아냐 모르냐 구별할 수 있는 실력이 있어야 한다.</description>
    </item>
    
    <item>
      <title>[AI웹개발 취업캠프/정보통신산업진흥원(NIPA)] Day 1</title>
      <link>http://ganyunhee.github.io/posts/aiweb_day1/</link>
      <pubDate>Tue, 18 Jul 2023 00:00:00 +0000</pubDate>
      
      <guid>http://ganyunhee.github.io/posts/aiweb_day1/</guid>
      <description>Camp Course Summary FrontEnd, BackEnd, AI(PyTorch for Deep Learning, FastAPI for Server)
이번 주 : HTML, CSS 다음 주 : Python 다다음 주 : SQL, Database Camp Study Goals 웹 개발 기초지식 습득하기 HTML, CSS 기초 문법 익히기 (스스로 배울 수 있는 수준 도달할 것) JavaScript 기초 문법 익히기, HTML&amp;amp;CSS 문서 조작(manipulate)할 수 있는 수준 도달할 것 SQL 기본 문법 (스스로 데이터를 정의할 수 있는 수준 도달할 것) Python 기본 문법 익히기 (데이터베이스와 통신할 수 있는 수준 도달할 것) 강의자료, 강사 소스코드 GitHub https://github.</description>
    </item>
    
  </channel>
</rss>
